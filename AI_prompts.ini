in ossn, give me the code and solution to change the new user validation link (sent by email) from : 
www.myossnurl.com/uservalidate/activate/4/e1d5abcc4e3d4e82dd8a8d13c53abbb0
to:
`www.myossnurl.com/diploma/upload/{userguid}/{token}` (token = first 10 chars of user validation hash)

http://localhost/staff/diploma/upload/3/fcd3b206d3

prompts:
Develop an OSSN v8.1 component named "DiplomaVerifier" that allows non-logged-in users to upload diplomas via token authentication. Follow these requirements:

**Core Functionality**
1. URL Structure: 
   `www.myossnurl.com/diploma/upload/{userguid}/{token}` 
   (token = first 10 chars of user validation hash)

2. Authentication Logic:
   - If user is validated (hash=NULL): Show message "Account already verified" in OSSN style
   - Else:
     a. Check for existing diploma upload
     b. If exists: Show "Please wait for admin verification"
     c. Else: Show upload form

**Technical Requirements**
1. Reuse existing OSSN APIs:
   - File handling: Use `OssnFile` class like in Photos component
   - Database: Use `OssnDatabase` for queries
   - UI: Mimic Ads component form styling

*File Storage & Security Requirements**
1. Storage location: `ossn_data/diplomas/{user_guid}/`
2. File naming:
   - Generate hashed filenames using OSSN's photo component method: `md5(time() . rand()) . ".{ext}"`
   - Store original filename in metadata
3. URL obfuscation:
   - Public URLs should use the hashed filename
   - Real filenames should never appear in URLs   


4. Upload Process:
   - Supported formats: JPG, PDF (max 5MB)
   - Store files in: `ossn_data/diplomas/{user_guid}/`
   - Create `DiplomaFile` entity extending `OssnFile`
   - Store all file metadata in entity attributes


5. Security:
   - Validate token against first 10 chars of `ossn_users.activation`
   - Prevent path traversal in file uploads
   - Use OSSN's `input()` for sanitization


**UI Requirements**
1. Upload form (views/default/diploma/upload.php):
   - Must match OSSN's form styling
   - Show file type restrictions
   - Include CSRF token (ossn_add_tokens_to_form())

**Best Practices**
1. Do NOT modify core files
2. Use OSSN's existing functions:
   - `ossn_file_storage_path()` for storage
   - `ossn_validate_file()` for file checks
3. Language file must contain:


**Deliverables**
1. Complete component package

**Validation Notes**
- Test with both validated/unvalidated users
- Verify token mismatch shows 404
- Confirm file type/size restrictions work
- Check admin panel integration for verification (separate module)


**Implementation Files**
1. Component Structure:
   diploma_verifier/
   ├── classes/
   │   └── Diploma.php (handles DB operations)
   ├── pages/
   │   └── upload.php (main logic)
   ├── actions/
   │   └── upload.php (file processing)
   ├── views/
   │   └── default/
   │       └── diploma/
   │           └── upload.php (UI)
   ├── languages/
   │   └── en.php
   ├── start.php (component init)
   └── install.php (DB setup)

**Key Code Snippets**
1. upload.php (Page Controller):
